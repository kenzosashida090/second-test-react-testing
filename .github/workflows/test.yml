name: Test project
on: push # whenever a new push comes to the repository
env:
  DB_NAME: Test
jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3DB_BAME
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Run lint
  #       run: npm run lint
  test:
    environment: testing # access to the repository keys
    env:
      DB_CLUSTER_ADDRESSS: 1234
      DB_USERNAME: ${{secrets.DB_NAME}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      PORT: 8080
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3 # this is a community action that download code
      #- #name: Install nodejs #ubuntu already install nodejs
        #uses: actions/setup-node@v3  
        #with: 
        #  node-version: 22.15
      - name: Cache dependencies
        uses: actions/cache@v3 # caching the dependencies
        with:
          path: ~/.npm # npm will know that is a dependencie cache
          key: deps-node-modules-${{ hashFiles('**/package-loc.json') }} # whenever the file change the hash will change thus the dependencie folder will be re install
      - name: Install dependencies
        run: npm ci # this is more safe than npm install
        #run: echo "$PORT" # Access to the env value
      - name: Run test
        id: run-test
        run: npm run test
      - name: Upload test report if fails
      # Other way to continue the workflow even if a step fails we set the command continue-on-error: true
        if: failure() && steps.run-test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: json-report.json
  deploy:
    continue-on-error: true
    strategy:
      matrix:
        node-version: [20,22,23]
        os: ['ubuntu-latest', 'windows-latest']
        include: 
          - node-version: 18
            os: ubuntu-latest
        exclude:
          - node-version: 20
            os: windows-latest

    needs: 'test' 
    runs-on: ${{ matrix.os }}
    outputs:
      scripts-file: ${{ steps.publish.outputs.script-file }} # could be different name of the value scripts-file we can name it ourselfs
    steps:
      - name: Get code
        uses: actions/checkout@v3 # this is a community action that download code
      #- #name: Install nodejs #ubuntu already install nodejs
        #uses: actions/setup-node@v3
        #with: 
        #  node-version: 22.15
      - name: Cache dependencies
        uses: actions/cache@v3 # caching the dependencies
        with:
          path: node_modules # npm will know that is a dependencie cache
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # whenever the file change the hash will change thus the dependencie folder will be re install
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # This is from cache actions will return a boolean if its available to use cache.
        run: npm ci # this is more safe than npm install
      - name: Build project
        run: npm run build
      - name: Publish JS filename
        id: publish  # to access the filename value
        run: find dist/assets/*.js -type f -execdir echo '{script-file}={}' >> $GITHUB_OUTPUT ';'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist  # to add multple files we set the key | and enter. then set the files that we want                  
  downloadDeploy:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: actions/download-artifact@v4
        with:
          name: dist-files # has to be the same name file that we download
      - name: Access value
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Output contents
        run: ls # list of the contain of the dist file.   \
  report:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Report failure
        run: echo "Something went wrong ${{ github }}"